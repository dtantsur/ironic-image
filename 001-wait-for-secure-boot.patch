commit 13a56e21b09c6b74681d45b278fb64edf955a400
Author: Dmitry Tantsur <dtantsur@protonmail.com>
Date:   Tue Nov 8 13:45:26 2022 +0100

    [WIP] Wait for secure boot state change if it's not immediate
    
    Change-Id: I318940a76be531f453f0f5cf31a59cba16febf57

diff --git a/ironic/conf/redfish.py b/ironic/conf/redfish.py
index eddf3e013..17ee456e1 100644
--- a/ironic/conf/redfish.py
+++ b/ironic/conf/redfish.py
@@ -100,6 +100,12 @@ opts = [
                default=60,
                help=_('Number of seconds to wait between checking for '
                       'failed raid config tasks')),
+    cfg.IntOpt('secure_boot_config_timeout',
+               min=0,
+               default=900,
+               help=_('Number of seconds to wait for a secure boot change '
+                      'to take effect after a reboot. Set to 0 to disable '
+                      'waiting.')),
 ]
 
 
diff --git a/ironic/drivers/modules/redfish/management.py b/ironic/drivers/modules/redfish/management.py
index 10daea593..f6104b365 100644
--- a/ironic/drivers/modules/redfish/management.py
+++ b/ironic/drivers/modules/redfish/management.py
@@ -14,6 +14,7 @@
 #    under the License.
 
 import collections
+import time
 
 from ironic_lib import metrics_utils
 from oslo_log import log
@@ -43,6 +44,8 @@ METRICS = metrics_utils.get_metrics_logger(__name__)
 
 sushy = importutils.try_import('sushy')
 
+SECURE_BOOT_CONFIG_INTERVAL = 15
+
 if sushy:
     BOOT_DEVICE_MAP = {
         sushy.BOOT_SOURCE_TARGET_PXE: boot_devices.PXE,
@@ -1077,9 +1080,44 @@ class RedfishManagement(base.ManagementInterface):
                    % {'node': task.node.uuid, 'value': state, 'exc': exc})
             LOG.error(msg)
             raise exception.RedfishError(error=msg)
-        else:
-            LOG.info('Secure boot state for node %(node)s has been set to '
-                     '%(value)s', {'node': task.node.uuid, 'value': state})
+
+        self._wait_for_secure_boot(task, sb, state)
+        LOG.info('Secure boot state for node %(node)s has been set to '
+                 '%(value)s', {'node': task.node.uuid, 'value': state})
+
+    def _wait_for_secure_boot(self, task, sb, state):
+        LOG.debug('Refreshing node %s', task.node.uuid)
+        # NOTE(dtantsur): at least Dell machines change secure boot status via
+        # a BIOS configuration job. A reboot is needed to apply it.
+        sb.refresh(force=True)
+        if sb.enabled == state:
+            return
+
+        LOG.info('Rebooting node %(node)s to change secure boot state to '
+                 '%(value)s', {'node': task.node.uuid, 'value': state})
+
+        old_power_state = task.driver.power.get_power_state(task)
+        manager_utils.node_power_action(task, states.REBOOT)
+
+        threshold = time.time() + CONF.redfish.secure_boot_config_timeout
+        while time.time() <= threshold and sb.enabled != state:
+            LOG.debug('Still waiting for secure boot status of node %(node)s '
+                      'to become %(value)s, current is %(current)s',
+                      {'node': task.node.uuid, 'value': state,
+                       'current': sb.enabled})
+            time.sleep(SECURE_BOOT_CONFIG_INTERVAL)
+            sb.refresh(force=True)
+
+        if sb.enabled != state:
+            msg = (_('Timeout reached while waiting for secure boot state of '
+                     'node %(node)s to become %(state)s, '
+                     'current is %(current)s')
+                   % {'node': task.node.uuid, 'state': state,
+                      'current': sb.enabled})
+            LOG.error(msg)
+            raise exception.RedfishError(error=msg)
+
+        manager_utils.node_power_action(task, old_power_state)
 
     def _reset_keys(self, task, reset_type):
         system = redfish_utils.get_system(task.node)
